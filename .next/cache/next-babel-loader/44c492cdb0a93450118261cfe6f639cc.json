{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './toast.module.scss';\nimport ReactDOM from 'react-dom';\n\nconst Toast = props => {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.toast\n  }, props.msg));\n};\n\nexport const ToastContainer = props => {\n  return __jsx(\"div\", {\n    id: \"toast_container\",\n    className: styles.toast_container\n  });\n};\n/**\n * ToastController controls addition and deletion of toasts in Toast Controller\n * Nice help from Ashwani Arya\n * https://medium.com/@ashwaniparker/a-simple-nextjs-compatible-toast-cefdec4f3c11\n */\n\nexport const ToastController = {\n  timeout: null,\n  currentToast: false,\n  delete: () => {\n    let container = document.getElementById('toast_container'); // check if theres a ToastContainer active\n\n    if (container) {\n      // check if there is a current toast\n      if (ToastController.currentToast) {\n        ReactDOM.unmountComponentAtNode(container); // clear the timeout if there is any\n\n        if (ToastController.timeout) {\n          clearTimeout(ToastController.timeout);\n          ToastController.timeout = null;\n        }\n      } else {\n        console.error(\"Trying to call a ToastController.delete without calling ToastController.show first\");\n      }\n    } else {\n      console.error(\"You have to add a ToastContainer component to your page first\");\n    }\n  },\n  show: msg => {\n    console.log(\"show string\");\n    let container = document.getElementById('toast_container'); // check validity of toast controller\n\n    if (container) {\n      ReactDOM.render(__jsx(Toast, {\n        msg: msg\n      }), container); // set deletion timeout to 5 seconds for now\n\n      ToastController.timeout = setTimeout(ToastController.delete, 5000);\n      ToastController.currentToast = true;\n    } else {\n      console.error(\"You have to add a ToastContainer component to your page first\");\n    }\n  }\n};\n/**\n<motion.div initial=\"hidden\" animate={{\n        opacity: [0, 1, 0],\n        y: [0, 30, 0],\n      }}\n      transition={{\n        times: [0, 0.1, 0.9],\n        duration: interval,\n        ease: \"easeInOut\"\n      }}>\n */","map":null,"metadata":{},"sourceType":"module"}