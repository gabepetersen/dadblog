{"ast":null,"code":"var _jsxFileName = \"/Users/gabepetersen/Desktop/Projects/DadsBlog/dadblog/components/toggle-theme.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { BehaviorSubject } from 'rxjs';\nimport Button from './button';\nimport { getThemeController } from './theme-provider'; // Imma use behavior subject because the subscription takes the current value before subscription and processes it\n// AND.. you can add data to it easily and the subscription will process all of them as well\n// AND... you can multicast your data\n\nexport const isDark = new BehaviorSubject(false); // Button component to toggle the theme\n\nexport default function ToggleTheme() {\n  // get the theme state and function to change it\n  const [theme, setTheme] = getThemeController();\n  var newTheme;\n  return __jsx(Button, {\n    style: \"primary\",\n    callback: () => {\n      // get the current dark/light value\n      isDark.subscribe(dark => {\n        setTheme(dark ? newTheme = false : newTheme = true);\n      });\n      isDark.next(newTheme);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, newTheme ? 'Day Mode' : 'Night Mode');\n}","map":{"version":3,"sources":["/Users/gabepetersen/Desktop/Projects/DadsBlog/dadblog/components/toggle-theme.tsx"],"names":["BehaviorSubject","Button","getThemeController","isDark","ToggleTheme","theme","setTheme","newTheme","subscribe","dark","next"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,MAAhC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,kBAAnC,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAG,IAAIH,eAAJ,CAAoB,KAApB,CAAf,C,CAEP;;AACA,eAAe,SAASI,WAAT,GAAuB;AACpC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,kBAAkB,EAA5C;AACA,MAAIK,QAAJ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAE,MAAM;AACtC;AACAJ,MAAAA,MAAM,CAACK,SAAP,CAAiBC,IAAI,IAAI;AACvBH,QAAAA,QAAQ,CAACG,IAAI,GAAGF,QAAQ,GAAG,KAAd,GAAsBA,QAAQ,GAAG,IAAtC,CAAR;AACD,OAFD;AAGAJ,MAAAA,MAAM,CAACO,IAAP,CAAYH,QAAZ;AACD,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGA,QAAQ,GAAG,UAAH,GAAgB,YAP3B,CADF;AAWD","sourcesContent":["import { BehaviorSubject } from 'rxjs';\n\nimport Button from './button';\nimport { getThemeController } from './theme-provider';\n\n// Imma use behavior subject because the subscription takes the current value before subscription and processes it\n// AND.. you can add data to it easily and the subscription will process all of them as well\n// AND... you can multicast your data\nexport const isDark = new BehaviorSubject(false);\n\n// Button component to toggle the theme\nexport default function ToggleTheme() {\n  // get the theme state and function to change it\n  const [theme, setTheme] = getThemeController();\n  var newTheme: boolean;\n  \n  return (\n    <Button style=\"primary\" callback={() => {\n      // get the current dark/light value\n      isDark.subscribe(dark => {\n        setTheme(dark ? newTheme = false : newTheme = true);\n      });\n      isDark.next(newTheme);\n    }}>\n      {newTheme ? 'Day Mode' : 'Night Mode'}\n    </Button>\n  );\n}"]},"metadata":{},"sourceType":"module"}