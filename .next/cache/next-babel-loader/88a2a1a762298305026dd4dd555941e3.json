{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { motion } from 'framer-motion';\nimport { getThemeController } from './theme-provider';\nimport Button from './button';\nimport styles from './navbar.module.scss';\nimport utilStyles from '../styles/utils.module.scss';\nexport default function Navbar(_ref) {\n  var home = _ref.home;\n\n  // get the theme state and function to change it\n  var _getThemeController = getThemeController(),\n      _getThemeController2 = _slicedToArray(_getThemeController, 2),\n      theme = _getThemeController2[0],\n      setTheme = _getThemeController2[1];\n\n  var user = false;\n  return __jsx(\"nav\", null, __jsx(motion.ul, {\n    className: styles.menu,\n    initial: \"initial\",\n    animate: \"animate\",\n    variants: nav_list\n  }, __jsx(motion.li, {\n    className: \"\".concat(utilStyles.heading2Xl, \" \").concat(styles.menu_title),\n    variants: nav_item,\n    whileHover: {\n      scale: 1.02\n    },\n    whileTap: {\n      scale: 0.9\n    }\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Thats a Blog!\"))), __jsx(motion.li, {\n    variants: nav_item\n  }, __jsx(Button, {\n    style: \"primary\",\n    callback: function callback() {\n      return setTheme(theme == 'dark' ? 'light' : 'dark');\n    }\n  }, theme == 'dark' ? 'Day Mode' : 'Night Mode')), __jsx(motion.li, {\n    variants: nav_item\n  }, __jsx(Link, {\n    href: \"/\"\n  }, \"Articles\")), __jsx(motion.li, {\n    variants: nav_item\n  }, __jsx(LoginControl, {\n    user: user\n  }))));\n}\n/**\n * LoginControl returns sign in or sign out based on if the user is logged in\n * @param user tells if the user is logged in or not\n */\n\nfunction LoginControl(_ref2) {\n  var user = _ref2.user;\n  // just have this placeholder here for now\n  return user ? __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Sign Out\")) : __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Login\"));\n} // animation variants for the unordered list\n\n\nvar nav_list = {\n  initial: {\n    opacity: 0\n  },\n  animate: {\n    opacity: 1,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.1\n    }\n  }\n}; // animation variants for the list items\n\nvar nav_item = {\n  initial: {\n    opacity: 0,\n    y: -100\n  },\n  animate: {\n    opacity: 1,\n    y: 0\n  }\n};","map":null,"metadata":{},"sourceType":"module"}