{"ast":null,"code":"import fs from 'fs';\nimport path from 'path';\nexport default ((req, res) => {\n  try {\n    const postsDirectory = path.join(process.cwd(), 'posts'); // I love ES6 babbyyyyyy\n\n    const {\n      title,\n      text,\n      username\n    } = req.body;\n\n    if (username !== 'gabepetersen') {\n      // send unauth code\n      res.status(403).json({\n        text: 'unauthorized user'\n      });\n    }\n\n    console.log(postsDirectory); // create url id / filename with replacing spaces\n\n    const url = title.toLowerCase().replace(/ /g, '-'); // check to see if unique title\n\n    const fileNames = fs.readdirSync(postsDirectory);\n    fileNames.forEach(filename => {\n      // check if post already exists\n      if (filename.replace(/\\.md$/, '') == url) {\n        // send not acceptable if post exists already\n        res.status(406).json({\n          text: 'Title already exists'\n        });\n        return;\n      }\n    }); // create write stream\n\n    const fileStream = fs.createWriteStream(postsDirectory + '/' + url + '.md');\n    fileStream.write('---\\r\\n');\n    fileStream.write('title: \\'' + title + '\\'\\r\\n');\n    fileStream.write('date: ' + Date.now() + '\\r\\n');\n    fileStream.write('---\\r\\n\\r\\n');\n    fileStream.write(text);\n    fileStream.end(); // create finish event callback - send created code\n\n    fileStream.on('finish', () => {\n      res.status(201).json({\n        text: 'Blog Successfully Uploaded'\n      });\n      return;\n    }); // create errror event callback\n\n    fileStream.on('error', err => {\n      res.status(400).json({\n        text: `Error in Writing File: ${err}`\n      });\n      return;\n    });\n  } catch (err) {\n    res.status(400).json({\n      text: `Error in Request: ${err}`\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}