{"ast":null,"code":"import path from 'path';\nexport default ((req, res) => {\n  const postsDirectory = path.join(process.cwd(), 'posts'); // I love ES6 babbyyyyyy\n\n  const {\n    title,\n    text,\n    username\n  } = req.body;\n  console.log(req);\n  console.log(\"request body: \", {\n    title: title,\n    text: text,\n    username: username\n  });\n  /*\n  // create url id / filename\n  const url = title.toLowerCase().replace(' ', '-');\n  // check to see if unique title\n  const fileNames = fs.readdirSync(postsDirectory);\n  fileNames.forEach((filename) => {\n    // get ride of .md\n    if (filename.replace(/\\.md$/, '') == url) {\n      res.status(400).json({ text: 'Title already exists' });\n      return;\n    }\n  });\n  // create write stream\n  const fileStream = fs.createWriteStream(('../posts/' + url + '.md'));\n  // write to the md file\n  fileStream.write('---\\r\\n');\n  fileStream.write('title: \\'' + title + '\\'\\r\\n');\n  fileStream.write('date: \\'' + new Date() + '\\'\\r\\n');\n  fileStream.write('---\\r\\n\\r\\n');\n  fileStream.write(text);\n  // create finish event callback\n  fileStream.on('finish', () => {\n    res.status(200).json({ text: 'Blog Successfully Uploaded' })\n  });\n  // create errror event callback\n  fileStream.on('error', (err) => {\n    res.status(404).json({ text: `Error in Callback: ${err}` })\n  })\n  */\n\n  res.status(200).json({\n    text: 'successfuly posted'\n  });\n});","map":{"version":3,"sources":["/Users/gabepetersen/Desktop/Projects/DadsBlog/dadblog/pages/api/post-blog.tsx"],"names":["path","req","res","postsDirectory","join","process","cwd","title","text","username","body","console","log","status","json"],"mappings":"AAEA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,gBAAe,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AAC5D,QAAMC,cAAc,GAAGH,IAAI,CAACI,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,CAAvB,CAD4D,CAE5D;;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA4BR,GAAG,CAACS,IAAtC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B;AAAEL,IAAAA,KAAK,EAAEA,KAAT;AAAgBC,IAAAA,IAAI,EAAEA,IAAtB;AAA4BC,IAAAA,QAAQ,EAAEA;AAAtC,GAA9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BAP,EAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAArB;AAED,CAtCD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\nimport fs from 'fs';\nimport path from 'path';\n\nexport default (req: NextApiRequest, res: NextApiResponse) => {\n  const postsDirectory = path.join(process.cwd(), 'posts');\n  // I love ES6 babbyyyyyy\n  const { title, text, username } = req.body;\n\n  console.log(req);\n  console.log(\"request body: \", { title: title, text: text, username: username });\n  /*\n  // create url id / filename\n  const url = title.toLowerCase().replace(' ', '-');\n  // check to see if unique title\n  const fileNames = fs.readdirSync(postsDirectory);\n  fileNames.forEach((filename) => {\n    // get ride of .md\n    if (filename.replace(/\\.md$/, '') == url) {\n      res.status(400).json({ text: 'Title already exists' });\n      return;\n    }\n  });\n  // create write stream\n  const fileStream = fs.createWriteStream(('../posts/' + url + '.md'));\n  // write to the md file\n  fileStream.write('---\\r\\n');\n  fileStream.write('title: \\'' + title + '\\'\\r\\n');\n  fileStream.write('date: \\'' + new Date() + '\\'\\r\\n');\n  fileStream.write('---\\r\\n\\r\\n');\n  fileStream.write(text);\n  // create finish event callback\n  fileStream.on('finish', () => {\n    res.status(200).json({ text: 'Blog Successfully Uploaded' })\n  });\n  // create errror event callback\n  fileStream.on('error', (err) => {\n    res.status(404).json({ text: `Error in Callback: ${err}` })\n  })\n  */\n  res.status(200).json({ text: 'successfuly posted'})\n\n}\n\n"]},"metadata":{},"sourceType":"module"}