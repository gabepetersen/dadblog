{"ast":null,"code":"var _jsxFileName = \"/Users/gabepetersen/Desktop/Projects/DadsBlog/dadblog/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport dynamic from 'next/dynamic';\nimport Layout, { siteTitle } from '../components/layout';\nimport CustomDate from '../components/custom-date';\nimport { ToastContainer } from '../components/toast';\nconst ToastController = dynamic(() => import('../components/toast'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/toast')],\n    modules: ['../components/toast']\n  }\n});\nimport { getSortedPostsData } from '../lib/posts';\nimport utilStyles from '../styles/utils.module.scss';\nexport default function Home({\n  allPostsData\n}) {\n  return __jsx(Layout, {\n    home: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, siteTitle)), __jsx(\"section\", {\n    className: utilStyles.headingMd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Hello! My name is Gabe and I want to die. If you would like to kill me, please email me at \", __jsx(\"a\", {\n    href: \"mailto:gabeardenpetersen@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }\n  }, \"gabeardenpetersen@gmail.com\"), \"for more information.\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"(This is a sample website - you\\u2019ll be building a site like this on\", ' ', __jsx(\"a\", {\n    href: \"https://nextjs.org/learn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"our Next.js tutorial\"), \".)\"), __jsx(\"button\", {\n    onClick: checkLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Show Toast\")), __jsx(\"section\", {\n    className: `${utilStyles.headingMd} ${utilStyles.padding1px}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: utilStyles.headingLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Blog\"), __jsx(\"ul\", {\n    className: utilStyles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, allPostsData.map(({\n    id,\n    date,\n    title\n  }) => __jsx(\"li\", {\n    className: utilStyles.listItem,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: `/posts/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, title)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(CustomDate, {\n    ms: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  })))))), __jsx(\"section\", {\n    className: `${utilStyles.headingMd} ${utilStyles.padding1px}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Create a Post\"))), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction checkLogin() {\n  var loggedIn = true;\n  var message = 'I like big booty!';\n\n  if (loggedIn) {\n    if (false) {\n      ToastController.show(message);\n    }\n  }\n} // Get static props will get the blog posts on static generation pre-render\n\n\nexport const getStaticProps = async () => {\n  const allPostsData = getSortedPostsData();\n  return {\n    props: {\n      allPostsData\n    }\n  };\n};","map":{"version":3,"sources":["/Users/gabepetersen/Desktop/Projects/DadsBlog/dadblog/pages/index.tsx"],"names":["Head","Link","dynamic","Layout","siteTitle","CustomDate","ToastContainer","ToastController","getSortedPostsData","utilStyles","Home","allPostsData","headingMd","checkLogin","padding1px","headingLg","list","map","id","date","title","listItem","loggedIn","message","show","getStaticProps","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAIA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,MAAMC,eAAe,GAAGL,OAAO,CAAC,MAAM,OAAO,qBAAP,CAAP;AAAA;AAAA,wCAAc,qBAAd;AAAA,cAAc,qBAAd;AAAA;AAAA,EAA/B;AACA,SAASM,kBAAT,QAAmC,cAAnC;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAGA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAEb;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQP,SAAR,CADF,CADF,EAKE;AAAS,IAAA,SAAS,EAAEK,UAAU,CAACG,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAEqB;AAAG,IAAA,IAAI,EAAC,oCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFrB,0BADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFACqE,GADrE,EAEI;AAAG,IAAA,IAAI,EAAC,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,OANF,EAUE;AAAQ,IAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CALF,EAiBE;AAAS,IAAA,SAAS,EAAG,GAAEJ,UAAU,CAACG,SAAU,IAAGH,UAAU,CAACK,UAAW,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEL,UAAU,CAACM,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,SAAS,EAAEN,UAAU,CAACO,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,YAAY,CAACM,GAAb,CAAiB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GAAD,KACd;AAAI,IAAA,SAAS,EAAEX,UAAU,CAACY,QAA1B;AAAoC,IAAA,GAAG,EAAEH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,UAASA,EAAG,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAJ,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAED,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADH,CADH,CAFF,CAjBF,EAiCE;AAAS,IAAA,SAAS,EAAG,GAAEV,UAAU,CAACG,SAAU,IAAGH,UAAU,CAACK,UAAW,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CAjCF,EAuCE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,CADF;AA2CD;;AAED,SAASD,UAAT,GAAsB;AACpB,MAAIS,QAAQ,GAAG,IAAf;AACA,MAAIC,OAAO,GAAG,mBAAd;;AACA,MAAID,QAAJ,EAAc;AACZ,eAAmC;AACjCf,MAAAA,eAAe,CAACiB,IAAhB,CAAqBD,OAArB;AACD;AACF;AACF,C,CAGD;;;AACA,OAAO,MAAME,cAA8B,GAAG,YAAY;AACxD,QAAMd,YAAY,GAAGH,kBAAkB,EAAvC;AACA,SAAO;AACLkB,IAAAA,KAAK,EAAE;AACLf,MAAAA;AADK;AADF,GAAP;AAKD,CAPM","sourcesContent":["import Head from 'next/head';\nimport Link from 'next/link';\nimport dynamic from 'next/dynamic';\nimport { GetStaticProps } from 'next';\nimport { useEffect } from 'react';\n\nimport Layout, { siteTitle } from '../components/layout';\nimport CustomDate from '../components/custom-date';\nimport { ToastContainer } from '../components/toast';\nconst ToastController = dynamic(() => import('../components/toast'))\nimport { getSortedPostsData } from '../lib/posts';\n\nimport utilStyles from '../styles/utils.module.scss';\nimport indexStyles from './index.module.scss'\n\nexport default function Home({ allPostsData }:\n  { allPostsData: {id: string, date: number, title: string}[] }\n) {\n  return (\n    <Layout home>\n      <Head>\n        <title>{siteTitle}</title>\n      </Head>\n      \n      <section className={utilStyles.headingMd}>\n        <p>\n          Hello! My name is Gabe and I want to die. If you would like to kill me, \n          please email me at <a href=\"mailto:gabeardenpetersen@gmail.com\">gabeardenpetersen@gmail.com</a> \n          for more information.\n        </p>\n        <p>\n          (This is a sample website - youâ€™ll be building a site like this on{' '}\n            <a href=\"https://nextjs.org/learn\">our Next.js tutorial</a>.)\n        </p>\n        <button onClick={checkLogin}>Show Toast</button>\n      </section>\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <h2 className={utilStyles.headingLg}>Blog</h2>\n        <ul className={utilStyles.list}>\n          {allPostsData.map(({ id, date, title }) => (\n              <li className={utilStyles.listItem} key={id}>\n                <Link href={`/posts/${id}`}>\n                  <a>{title}</a>\n                </Link>\n                <br />\n                <small>\n                  <CustomDate ms={date} />\n                </small>\n              </li>\n            ))}\n        </ul>\n      </section>\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <Link href=\"/create\">\n          <a>Create a Post</a>\n        </Link>\n      </section>\n      {/* Need a Toast Container for Toasts */}\n      <ToastContainer></ToastContainer>\n    </Layout>\n  )\n}\n\nfunction checkLogin() {\n  var loggedIn = true;\n  var message = 'I like big booty!';\n  if (loggedIn) {\n    if (typeof window !== 'undefined') {\n      ToastController.show(message);\n    }\n  }\n}\n\n\n// Get static props will get the blog posts on static generation pre-render\nexport const getStaticProps: GetStaticProps = async () => {\n  const allPostsData = getSortedPostsData();\n  return {\n    props: {\n      allPostsData\n    }\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}