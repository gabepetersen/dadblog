{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Alert from './alert'; // Big thank you goes out to Jeremy Gillick on this solution\n// I have no idea if this is good practice or not - but it is a nice short term solution\n// https://stackoverflow.com/questions/51662609/react-programmatically-opening-modals-and-cleaning-up-automatically\n\nexport var overlay = {\n  create: function create() {\n    if (true) {\n      // first append a div to the document body\n      var container = document.createElement('div');\n      document.body.appendChild(container); // create an react reference with customized arguements and children nodes\n\n      var overlayReference = /*#__PURE__*/React.createElement(Alert, {\n        children: 'yeet',\n        type: 'success'\n      }, 'yeet'); // render new overlay element inside of DOM container\n\n      ReactDOM.render(overlayReference, container);\n      console.log();\n      return this.destroy(container);\n    }\n  },\n  destroy: function destroy(container) {\n    if (true) {\n      // destroy from virtual DOM\n      ReactDOM.unmountComponentAtNode(container); // destroy reference of container\n\n      container.parentNode.removeChild(container);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/gabepetersen/Desktop/Projects/DadsBlog/dadblog/components/overlay.tsx"],"names":["React","ReactDOM","Alert","overlay","create","container","document","createElement","body","appendChild","overlayReference","children","type","render","console","log","destroy","unmountComponentAtNode","parentNode","removeChild"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;AACA;AACA;;AAEA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,MADqB,oBACZ;AACP,cAAkC;AAChC;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,SAA1B,EAHgC,CAIhC;;AACA,UAAMK,gBAAgB,gBAAGV,KAAK,CAACO,aAAN,CAAoBL,KAApB,EAA2B;AAACS,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAA3B,EAAgE,MAAhE,CAAzB,CALgC,CAMhC;;AACAX,MAAAA,QAAQ,CAACY,MAAT,CAAgBH,gBAAhB,EAAkCL,SAAlC;AACAS,MAAAA,OAAO,CAACC,GAAR;AACA,aAAO,KAAKC,OAAL,CAAaX,SAAb,CAAP;AACD;AACF,GAboB;AAcrBW,EAAAA,OAdqB,mBAcbX,SAda,EAcF;AACjB,cAAkC;AAChC;AACAJ,MAAAA,QAAQ,CAACgB,sBAAT,CAAgCZ,SAAhC,EAFgC,CAGhC;;AACAA,MAAAA,SAAS,CAACa,UAAV,CAAqBC,WAArB,CAAiCd,SAAjC;AACD;AACF;AArBoB,CAAhB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Alert from './alert';\n\n// Big thank you goes out to Jeremy Gillick on this solution\n// I have no idea if this is good practice or not - but it is a nice short term solution\n// https://stackoverflow.com/questions/51662609/react-programmatically-opening-modals-and-cleaning-up-automatically\n\nexport const overlay = {\n  create() {\n    if (typeof window != 'undefined') {\n      // first append a div to the document body\n      const container = document.createElement('div');\n      document.body.appendChild(container);\n      // create an react reference with customized arguements and children nodes\n      const overlayReference = React.createElement(Alert, {children: 'yeet', type: 'success'}, 'yeet');\n      // render new overlay element inside of DOM container\n      ReactDOM.render(overlayReference, container);\n      console.log()\n      return this.destroy(container);\n    }\n  },\n  destroy(container) {\n    if (typeof window != 'undefined') {\n      // destroy from virtual DOM\n      ReactDOM.unmountComponentAtNode(container);\n      // destroy reference of container\n      container.parentNode.removeChild(container);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}